import { ValidationSchema } from 'fastest-validator';
export type DirectoryPath = '.git' | 'node_modules' | '.dual-build' | '.dual-build/logs' | '.dual-build/options' | '.dual-build/packages' | '.dual-build/tsconfigs' | 'bin' | 'src' | 'src/bin-command' | 'test' | 'assets' | 'data' | 'transient' | 'transient/build' | 'transient/build/esm' | 'transient/build/commonjs' | 'transient/publish' | 'transient/publish/esm' | 'transient/publish/commonjs' | 'transient/publish/bin' | 'transient/testing' | 'transient/testing/esm' | 'transient/testing/commonjs';
export declare enum ProjectDirectoryName {
    git = ".git",
    node_modules = "node_modules",
    dualBuild = ".dual-build",
    logs = "logs",
    options = "options",
    packages = "packages",
    tsconfigs = "tsconfigs",
    src = "src",
    srcBinCommand = "bin-command",
    test = "test",
    bin = "bin",
    assets = "assets",
    data = "data",
    transient = "transient",
    build = "build",
    buildEsm = "esm",
    buildCommonJS = "commonjs",
    publish = "publish",
    publishEsm = "esm",
    publishCommonJS = "commonjs",
    publishBin = "bin",
    testing = "testing",
    testingEsm = "esm",
    testingCommonJS = "commonjs",
    notDefined = "FOLDER_NOT_DEFINED"
}
export type DirectoryName = ProjectDirectoryName | string;
export type Directory = {
    directoryPath: DirectoryPath | string | 'NOT_DEFINED';
    name: DirectoryName;
    transient: boolean;
    autogenerated: boolean;
};
export type Directories = {
    [key in DirectoryPath | 'root']: Directory;
};
export declare const directories: Directories;
export type ContainsDirectories = {
    directories: Directories;
} | undefined;
export type ContainsRoot = {
    'root': Directory;
} | undefined;
export declare function isDirectory(dir: any | Directory): dir is Directory;
export declare const directoriesSchema: ValidationSchema;
export declare const directoriesWrappedSchema: ValidationSchema;
